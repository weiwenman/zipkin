/*
 * This file is generated by jOOQ.
 */
package zipkin2.storage.gaussdb.v2.internal.generated;


import org.jooq.Record;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;

import zipkin2.storage.gaussdb.v2.internal.generated.tables.ZipkinAnnotations;
import zipkin2.storage.gaussdb.v2.internal.generated.tables.ZipkinDependencies;
import zipkin2.storage.gaussdb.v2.internal.generated.tables.ZipkinSpans;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<Record> KEY_ZIPKIN_ANNOTATIONS_SPAN_ID_A_KEY = Internal.createUniqueKey(ZipkinAnnotations.ZIPKIN_ANNOTATIONS, DSL.name("key_zipkin_annotations_span_id_a_key"), new TableField[] { ZipkinAnnotations.ZIPKIN_ANNOTATIONS.SPAN_ID, ZipkinAnnotations.ZIPKIN_ANNOTATIONS.A_KEY, ZipkinAnnotations.ZIPKIN_ANNOTATIONS.A_TIMESTAMP }, true);
    public static final UniqueKey<Record> KEY_ZIPKIN_DEPENDENCIES_DAY = Internal.createUniqueKey(ZipkinDependencies.ZIPKIN_DEPENDENCIES, DSL.name("key_zipkin_dependencies_day"), new TableField[] { ZipkinDependencies.ZIPKIN_DEPENDENCIES.DAY, ZipkinDependencies.ZIPKIN_DEPENDENCIES.PARENT, ZipkinDependencies.ZIPKIN_DEPENDENCIES.CHILD }, true);
    public static final UniqueKey<Record> KEY_ZIPKIN_SPANS_ID_TRACE_KIND = Internal.createUniqueKey(ZipkinSpans.ZIPKIN_SPANS, DSL.name("key_zipkin_spans_id_trace_kind"), new TableField[] { ZipkinSpans.ZIPKIN_SPANS.ID, ZipkinSpans.ZIPKIN_SPANS.TRACE_ID, ZipkinSpans.ZIPKIN_SPANS.KIND }, true);
    public static final UniqueKey<Record> ZIPKIN_SPANS_PKEY = Internal.createUniqueKey(ZipkinSpans.ZIPKIN_SPANS, DSL.name("zipkin_spans_pkey"), new TableField[] { ZipkinSpans.ZIPKIN_SPANS.SPAN_ID }, true);
}
